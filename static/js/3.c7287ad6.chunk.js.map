{"version":3,"sources":["components/Users/Users.module.css","HOC/selectors.js","components/Users/Paginator.jsx","components/Users/User.jsx","components/Users/UsersContainer.jsx"],"names":["module","exports","getUsersSelector","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getFollowingInProgress","followingInProgress","getIsFetching","isFetching","Paginator","props","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","Loader","onClick","filter","p","map","className","s","navBar","onPageChanged","User","user","userItem","to","id","src","photos","small","userPhoto","followed","type","disabled","some","unfollow","follow","name","status","UsersContainer","pageNumber","changePage","this","getUsers","React","Component","connect"],"mappings":"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","file":"static/js/3.c7287ad6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2nN_Q\",\"navBar\":\"Users_navBar__3dIhe\",\"userItem\":\"Users_userItem__UfaCw\"};","\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};","import React, { useState } from 'react';\nimport Loader from '../Loader/Loader';\nimport s from './Users.module.css';\n\nconst Paginator = (props) => {\n  const pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  const pages = [];\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n  const portionSize = 10;\n  const portionCount = Math.ceil(pageCount / portionSize);\n  const [portionNumber, setPortionNumber] = useState(1);\n  const leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  const rightPortionNumber = portionNumber * portionSize;\n  return (\n    <div>\n      {props.isFetching ? <Loader /> : null}\n      <div>\n        {portionNumber > 1\n          && <button onClick={() => { setPortionNumber(portionNumber - 1); }}>Prev</button>}\n        {pages\n          .filter((p) => p >= leftPortionNumber && p <= rightPortionNumber)\n          .map((p) => (\n            <span\n              className={props.currentPage === p && s.navBar}\n              onClick={() => {\n                props.onPageChanged(p);\n              }}\n            >\n              {p}\n            </span>\n          ))}\n          {portionCount > portionNumber\n          && <button onClick={() => { setPortionNumber(portionNumber + 1); }}>Next</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/user.png';\n\nconst User = ({ user, ...props }) => (\n  <div className={s.userItem}>\n    <div>\n      <span>\n        <div>\n          <NavLink to={`/profile/${user.id}`}>\n            <img\n              src={user.photos.small != null ? user.photos.small : userPhoto}\n              className={s.userPhoto}\n            />\n          </NavLink>\n        </div>\n        <div>\n          {user.followed ? (\n            <button\n              type=\"button\"\n              disabled={props.followingInProgress.some(\n                (id) => id === user.id,\n              )}\n              onClick={() => {\n                props.unfollow(user.id);\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              disabled={props.followingInProgress.some(\n                (id) => id === user.id,\n              )}\n              onClick={() => {\n                props.follow(user.id);\n              }}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </span>\n      <span>\n        <span>\n          <div>{user.name}</div>\n          <div>{user.status !== null && user.status}</div>\n        </span>\n      </span>\n    </div>\n  </div>\n);\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  changePage,\n  follow,\n  getUsers,\n  unfollow,\n} from '../../redux/users-reducer';\nimport {\n  getCurrentPage,\n  getFollowingInProgress, getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsersSelector,\n} from '../../HOC/selectors';\nimport Paginator from './Paginator';\nimport User from './User';\n\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n    onPageChanged = (pageNumber) => {\n      this.props.changePage(pageNumber, this.props.pageSize);\n    };\n\n\n    render() {\n      return (\n        <div>\n          <Paginator\n            totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            isFetching={this.props.isFetching}\n          />\n          {this.props.users.map((user) => (\n            <User\n              users={user}\n              unfollow={this.props.unfollow}\n              follow={this.props.follow}\n              followingInProgress={this.props.followingInProgress}\n            />\n          ))}\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  users: getUsersSelector(state),\n  pageSize: getPageSize(state),\n  totalUsersCount: getTotalUsersCount(state),\n  currentPage: getCurrentPage(state),\n  followingInProgress: getFollowingInProgress(state),\n  isFetching: getIsFetching(state),\n});\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  follow,\n  unfollow,\n  changePage,\n})(UsersContainer);\n"],"sourceRoot":""}