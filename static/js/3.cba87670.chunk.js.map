{"version":3,"sources":["components/Users/Users.module.css","HOC/selectors.js","components/Users/Paginator.tsx","components/Users/User.tsx","components/Users/UsersContainer.tsx"],"names":["module","exports","getUsersSelector","state","usersPage","users","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getFollowingInProgress","followingInProgress","getIsFetching","isFetching","getIsAuth","auth","isAuth","Paginator","onPageChanged","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","Loader","onClick","filter","p","map","key","className","cn","s","navBar","User","user","unfollow","follow","userItem","to","id","alt","src","photos","small","userPhoto","followed","type","disabled","some","name","status","UsersContainer","pageNumber","props","changePage","this","getUsers","placeholder","onChange","e","filterUsers","currentTarget","value","React","Component","connect"],"mappings":"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","file":"static/js/3.cba87670.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2nN_Q\",\"navBar\":\"Users_navBar__3dIhe\",\"userItem\":\"Users_userItem__UfaCw\"};","\nexport const getUsersSelector = (state) => state.usersPage.users;\n\nexport const getPageSize = (state) => state.usersPage.pageSize;\n\nexport const getTotalUsersCount = (state) => state.usersPage.totalUsersCount;\n\nexport const getCurrentPage = (state) => state.usersPage.currentPage;\n\nexport const getFollowingInProgress = (state) => state.usersPage.followingInProgress;\n\nexport const getIsFetching = (state) => state.usersPage.isFetching;\n\nexport const getIsAuth = (state) => state.auth.isAuth;\n","import React, { useState, FC } from 'react';\nimport cn from 'classnames';\nimport Loader from '../Loader/Loader';\nimport s from './Users.module.css';\n\ntype PropsType = {\n  totalUsersCount: number\n  pageSize: number\n  currentPage: number\n  onPageChanged: (pageNumber: number) => void\n  isFetching: boolean\n}\n\nconst Paginator: FC<PropsType> = ({\n  totalUsersCount, pageSize, currentPage, onPageChanged, isFetching,\n}) => {\n  const pageCount = Math.ceil(totalUsersCount / pageSize);\n  const pages: Array<number> = [];\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n  const portionSize = 10;\n  const portionCount = Math.ceil(pageCount / portionSize);\n  const [portionNumber, setPortionNumber] = useState(1);\n  const leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  const rightPortionNumber = portionNumber * portionSize;\n  return (\n    <div>\n      {isFetching ? <Loader /> : null}\n      <div>\n        {portionNumber > 1\n          && <button onClick={() => { setPortionNumber(portionNumber - 1); }}>Prev</button>}\n        {pages\n          .filter((p) => p >= leftPortionNumber && p <= rightPortionNumber)\n          .map((p) => (\n            <span\n              key={p}\n              className={cn(currentPage === p && s.navBar)}\n              onClick={() => {\n                onPageChanged(p);\n              }}\n            >\n              {p}\n            </span>\n          ))}\n        {portionCount > portionNumber\n          && <button onClick={() => { setPortionNumber(portionNumber + 1); }}>Next</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React, { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/user.png';\nimport { userType } from '../../redux/reducerTypes';\n\n\ntype PropsType = {\n  user: userType\n  follow: (id: number) => void\n  unfollow: (id: number) => void\n  followingInProgress: Array<number>\n  isAuth: boolean\n}\n\nconst User: FC<PropsType> = ({\n  user, unfollow, follow, followingInProgress, isAuth,\n}) => (\n  <div className={s.userItem}>\n    <div>\n      <span>\n        <div>\n          <NavLink to={`/profile/${user.id}`}>\n            <img\n              alt=\"user\"\n              src={user.photos.small != null ? user.photos.small : userPhoto}\n              className={s.userPhoto}\n            />\n          </NavLink>\n        </div>\n        <div>\n          {user.followed && isAuth\n            && (\n            <button\n              type=\"button\"\n              disabled={followingInProgress.some(\n                (id) => id === user.id,\n              )}\n              onClick={() => {\n                unfollow(user.id);\n              }}\n            >\n              Unfollow\n            </button>\n            )}\n          {' '}\n          {!user.followed && isAuth\n            && (\n            <button\n              type=\"button\"\n              disabled={followingInProgress.some(\n                (id) => id === user.id,\n              )}\n              onClick={() => {\n                follow(user.id);\n              }}\n            >\n              Follow\n            </button>\n            )}\n        </div>\n      </span>\n      <div>{user.name}</div>\n      <div>{user.status !== null && user.status}</div>\n    </div>\n  </div>\n);\n\nexport default User;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  changePage,\n  follow,\n  getUsers,\n  unfollow,\n  filterUsers,\n} from '../../redux/users-reducer';\nimport {\n  getCurrentPage,\n  getFollowingInProgress, getIsAuth, getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsersSelector,\n} from '../../HOC/selectors';\nimport Paginator from './Paginator';\nimport User from './User';\nimport { appStateType } from '../../redux/redux-store';\nimport { userType } from '../../redux/reducerTypes';\n\n\ntype MapStatePropsType = {\n  users: Array<userType>\n  pageSize: number\n  totalUsersCount: number\n  currentPage: number\n  followingInProgress: Array<number>\n  isFetching: boolean\n  isAuth: boolean\n}\ntype MapDispatchPropsType = {\n  getUsers: (currentPage: number, pageSize: number) => void\n  follow: (id: number) => void\n  unfollow: (id: number) => void\n  changePage: (pageNumber: number, pageSize: number) => void\n  filterUsers: (value: string) => void\n}\ntype PropsType = MapStatePropsType & MapDispatchPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n    onPageChanged = (pageNumber: number) => {\n      this.props.changePage(pageNumber, this.props.pageSize);\n    };\n\n    render() {\n      const findUserHandler = (e: any) => {\n        this.props.filterUsers(e.currentTarget.value);\n      };\n      return (\n        <>\n          <input type=\"search\" placeholder=\"find current user\" onChange={findUserHandler} />\n          <Paginator\n            totalUsersCount={this.props.totalUsersCount}\n            pageSize={this.props.pageSize}\n            currentPage={this.props.currentPage}\n            onPageChanged={this.onPageChanged}\n            isFetching={this.props.isFetching}\n          />\n          {this.props.users.map((user) => (\n            <User\n              user={user}\n              unfollow={this.props.unfollow}\n              follow={this.props.follow}\n              followingInProgress={this.props.followingInProgress}\n              isAuth={this.props.isAuth}\n            />\n          ))}\n        </>\n      );\n    }\n}\n\nconst mapStateToProps = (state: appStateType): MapStatePropsType => ({\n  users: getUsersSelector(state),\n  pageSize: getPageSize(state),\n  totalUsersCount: getTotalUsersCount(state),\n  currentPage: getCurrentPage(state),\n  followingInProgress: getFollowingInProgress(state),\n  isFetching: getIsFetching(state),\n  isAuth: getIsAuth(state),\n});\n\nexport default connect<MapStatePropsType, MapDispatchPropsType, null, appStateType>(mapStateToProps, {\n  getUsers,\n  follow,\n  unfollow,\n  changePage,\n  filterUsers,\n})(UsersContainer);\n"],"sourceRoot":""}