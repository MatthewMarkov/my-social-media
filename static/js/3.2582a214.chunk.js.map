{"version":3,"sources":["components/Users/Users.module.css","components/Users/User.jsx","components/Users/Paginator.jsx","components/Users/Users.jsx","HOC/selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","User","user","props","to","id","src","photos","small","userPhoto","className","s","followed","type","disabled","followingInProgress","some","onClick","unfollow","follow","name","status","Paginator","pageCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumber","rightPortionNumber","isFetching","Loader","filter","p","map","currentPage","navBar","onPageChanged","Users","users","getUsersSelector","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","getIsFetching","UsersContainer","pageNumber","changePage","this","getUsers","React","Component","connect"],"mappings":"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","file":"static/js/3.2582a214.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__2nN_Q\",\"navBar\":\"Users_navBar__3dIhe\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Users.module.css';\nimport userPhoto from '../../assets/user.png';\n\nconst User = ({ user, ...props }) => (\n  <div>\n    <div>\n      <span>\n        <div>\n          <NavLink to={`/profile/${user.id}`}>\n            <img\n              src={\n                      user.photos.small != null ? user.photos.small : userPhoto\n                    }\n              className={s.userPhoto}\n            />\n          </NavLink>\n        </div>\n        <div>\n          {user.followed ? (\n            <button\n              type=\"button\"\n              disabled={props.followingInProgress.some(\n                (id) => id === user.id,\n              )}\n              onClick={() => {\n                props.unfollow(user.id);\n              }}\n            >\n              Unfollow\n            </button>\n          ) : (\n            <button\n              disabled={props.followingInProgress.some(\n                (id) => id === user.id,\n              )}\n              onClick={() => {\n                props.follow(user.id);\n              }}\n            >\n              Follow\n            </button>\n          )}\n        </div>\n      </span>\n      <span>\n        <span>\n          <div>{user.name}</div>\n          <div>{user.status}</div>\n        </span>\n        <span>\n          <div>user.location.country</div>\n          <div>user.location.city</div>\n        </span>\n      </span>\n    </div>\n  </div>\n);\n\nexport default User;\n","import React, { useState } from 'react';\nimport Loader from '../Loader/Loader';\nimport s from './Users.module.css';\n\nconst Paginator = (props) => {\n  const pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  const pages = [];\n  for (let i = 1; i <= pageCount; i++) {\n    pages.push(i);\n  }\n  const portionSize = 10;\n  const portionCount = Math.ceil(pageCount / portionSize);\n  const [portionNumber, setPortionNumber] = useState(1);\n  const leftPortionNumber = (portionNumber - 1) * portionSize + 1;\n  const rightPortionNumber = portionNumber * portionSize;\n  return (\n    <div>\n      {props.isFetching ? <Loader /> : null}\n      <div>\n        {portionNumber > 1\n          && <button onClick={() => { setPortionNumber(portionNumber - 1); }}>Prev</button>}\n        {pages\n          .filter((p) => p >= leftPortionNumber && p <= rightPortionNumber)\n          .map((p) => (\n            <span\n              className={props.currentPage === p && s.navBar}\n              onClick={() => {\n                props.onPageChanged(p);\n              }}\n            >\n              {p}\n            </span>\n          ))}\n          {portionCount > portionNumber\n          && <button onClick={() => { setPortionNumber(portionNumber + 1); }}>Next</button>}\n      </div>\n    </div>\n  );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport User from './User';\nimport Paginator from './Paginator';\n\nconst Users = (props) => (\n  <div>\n    <Paginator\n      totalUsersCount={props.totalUsersCount}\n      pageSize={props.pageSize}\n      isFetching={props.isFetching}\n      currentPage={props.currentPage}\n      onPageChanged={props.onPageChanged}\n    />\n    {props.users.map((user) => (\n      <User\n        user={user}\n        followingInProgress={props.followingInProgress}\n        unfollow={props.unfollow}\n        follow={props.follow}\n      />\n    ))}\n  </div>\n);\n\nexport default Users;\n","\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n};","import React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport {\n  changePage,\n  follow,\n  getUsers,\n  unfollow,\n} from '../../redux/users-reducer';\nimport {\n  getCurrentPage,\n  getFollowingInProgress, getIsFetching,\n  getPageSize,\n  getTotalUsersCount,\n  getUsersSelector,\n} from '../../HOC/selectors';\n\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n    onPageChanged = (pageNumber) => {\n      this.props.changePage(pageNumber, this.props.pageSize);\n    };\n\n\n    render() {\n      return (\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          onPageChanged={this.onPageChanged}\n          users={this.props.users}\n          unfollow={this.props.unfollow}\n          follow={this.props.follow}\n          followingInProgress={this.props.followingInProgress}\n          isFetching={this.props.isFetching}\n        />\n      );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n  users: getUsersSelector(state),\n  pageSize: getPageSize(state),\n  totalUsersCount: getTotalUsersCount(state),\n  currentPage: getCurrentPage(state),\n  followingInProgress: getFollowingInProgress(state),\n  isFetching: getIsFetching(state),\n});\n\nexport default connect(mapStateToProps, {\n  getUsers,\n  follow,\n  unfollow,\n  changePage,\n})(UsersContainer);\n"],"sourceRoot":""}